buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
        springSecurityTestVersion = '5.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// Allows us to set the environment on the command line: you just do:
// ./gradlew embedded bootRun
task embedded doLast {
    bootRun.systemProperty 'spring.profiles.active', 'embedded'
}

group = 'au.com.avmaint'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
	mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("io.jsonwebtoken:jjwt:0.7.0")
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')

    // included because they are not part of the default module in Java 9+ Also java.se module will
    // be removed in java 11, so we can't just add the module in runtime via --add-modules
    // hibernate needs them...
    runtime("javax.xml.bind:jaxb-api:2.2.11")
    runtime("com.sun.xml.bind:jaxb-core:2.2.11")
    runtime("com.sun.xml.bind:jaxb-impl:2.2.11")
    runtime("javax.activation:activation:1.1.1")
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test:$springSecurityTestVersion")
}
